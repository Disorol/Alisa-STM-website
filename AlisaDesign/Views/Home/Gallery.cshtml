@{
    ViewData["Title"] = "Gallery";
}

<!-- Тег body может быть только один на документ, он у нас уже есть в Layout, так что просто div-->

<!-- 
    Посмотри видео, которое я скидывал тебе по позиционированию блоков. Обрати внимание на display: flex. В нём все блоки встают друг за дружкой.
    display: flex мы помечаем родительский блок, а все блоки в нём display: inline-block, таким образом все дочерние блоки будут иметь ширину сугубо
    для вмещения своего контента. display: flex даёт возможность блокам внутри него распологаться бесконечно вправо. Чтобы блок, не вмещающийся на страницу по ширине,
    съехал на следующую строку, необходимо указать стиль flex-wrap: wrap. Поэксперементируй с этим. Можешь загуглить эти теги, там объяснение куда более обширное.
    Для того, чтобы добавить картинке рамку, используй только один border для родительского блока каждой рамки. Т.е. берём, загоняем каждый img в div и уже работаем
    с рамкой для этого div. Можешь даже создать класс, потому что у всех div рамки, в теории, должны быть одинаковые. 
-->
<div>
    <h1 style="font-size: 32px; margin-top: 3%; margin-left: 6%; color: white ">Галерея проектов</h1>
    <p style="font-size: 20px; margin-top: 2%; margin-left: 6%; color: white">
            Технологии AR и VR можно успешно применять при построении решений <br />
            для металлургии:
    </p>
    
    <div style="display: flex">
        <div class="border-with-gallery" style="margin-left: 6%">
            <img class="gallery-image" src="/img/foundry-shop.png" />
        </div>
        <div class="border-with-gallery" style="margin-left: 2%">
            <img class="gallery-image" src="/img/bridge-foundry.png" />
        </div>
        <div class="border-with-gallery" style="margin-left: 2%">
            <img class="gallery-image" src="/img/iron-foundry.png" />
        </div>
    </div>


    <p style="font-size: 20px; margin-top: 2%; margin-left: 6%; color: white ">
        C помощью них можно моделировать сложную структуру энергетических <br />
        станций:</p>
    <div style="display:flex">
        <div class="border-with-gallery" style="margin-left: 6%;">
            <img class="gallery-image" src="/img/image 15.png" />
        </div>
        <div class="border-with-gallery" style="margin-left: 2%;">
            <img class="gallery-image" src="/img/image 16.png" />
        </div>
        <div class="border-with-gallery" style="margin-left: 2%;">
            <img class="gallery-image" src="/img/image 17.png" />
        </div>
        
    </div>
    <div style="display:flex">
        <div class="border-with-gallery" style="margin-left: 6%; margin-top: 1%">
            <img class="gallery-image" src="/img/image 18.png"/>
        </div>
    </div>

</div>
  









<!-- Отсюда -->
    


  

    
    <!-- И до сюда всё по-новой. Главное, не пугайся. Тебя никто никуда не гонит. Сейчас важно научиться делать правильно <3 -->


<!-- 
    А ещё я предлагаю тебе давать картинкам осмысленные названия маленькими буквами через дефис. Это назвается kebab-case. 
    Т.е. картинка литейный цех будет называться foundry-shop. Точно также предлагаю называть css-файлы, маленькими буквами 
    через дефис. То, что использовала ты, называется верблюжий стиль (Пример: foundryShop), его обычно используют при 
    наименовании переменных и полей классов без гетеров/сетеров. А ещё по поводу вьюшек, пусть они будут в стиле PascalCase
    (Пример: FoundryShop, Partners). Все эти условности идут из общепринятых договоренностей программистов, их желательно соблюдать,
    там и я не всё знаю пока, но с этим работать будет удобнее.
-->

<!--
    Кстати, глянь, как я сделал рамку для картинок в Partners.
-->